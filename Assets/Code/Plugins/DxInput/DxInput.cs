/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class DxInput {
  public static void Init() {
    DxInputPINVOKE.Init();
  }

  public static void Update() {
    DxInputPINVOKE.Update();
  }

  public static void Close() {
    DxInputPINVOKE.Close();
  }

  public static int NumDevices() {
    int ret = DxInputPINVOKE.NumDevices();
    return ret;
  }

  public static string DeviceName(int nDevice) {
    string ret = DxInputPINVOKE.DeviceName(nDevice);
    return ret;
  }

  public static bool DeviceEnabled(int nDevice) {
    bool ret = DxInputPINVOKE.DeviceEnabled(nDevice);
    return ret;
  }

  public static void DeviceEnable(int nDevice, bool bEnable) {
    DxInputPINVOKE.DeviceEnable(nDevice, bEnable);
  }

  public static void DeviceEnableAll(bool bEnable) {
    DxInputPINVOKE.DeviceEnableAll(bEnable);
  }

  public static int NumDeviceControls(int nDevice) {
    int ret = DxInputPINVOKE.NumDeviceControls(nDevice);
    return ret;
  }

  public static string DeviceControlName(int nDevice, int nControl) {
    string ret = DxInputPINVOKE.DeviceControlName(nDevice, nControl);
    return ret;
  }

  public static ControlType DeviceControlType(int nDevice, int nControl) {
    ControlType ret = (ControlType)DxInputPINVOKE.DeviceControlType(nDevice, nControl);
    return ret;
  }

  public static float DeviceControlValue(int nDevice, int nControl) {
    float ret = DxInputPINVOKE.DeviceControlValue(nDevice, nControl);
    return ret;
  }

  public static bool DeviceControlPressed(int nDevice, int nControl) {
    bool ret = DxInputPINVOKE.DeviceControlPressed(nDevice, nControl);
    return ret;
  }

  public static bool DeviceControlReleased(int nDevice, int nControl) {
    bool ret = DxInputPINVOKE.DeviceControlReleased(nDevice, nControl);
    return ret;
  }

}
